{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Our HHG Project Documentation This documentation contains components written in multiple languages: C++ Module Documentation Java GUI Documentation Python Backend Documentation About the Project This software simulates high-harmonic generation using numerical methods. It consists of: - a C++ core simulation engine, - a Java-based GUI frontend, - and a Python integration/management layer. Introduction High-Harmonic Generation (HHG) is a nonlinear optical process that occurs when intense, ultrashort laser pulses interact with atoms or molecules, resulting in the emission of coherent radiation at integer multiples of the driving laser frequency. The simulation of HHG phenomena requires highly accurate numerical models capable of resolving both temporal and spatial variations of the electromagnetic field, as well as the nonlinear atomic response. Due to the inherent complexity of the problem, particularly when modeling at the single-atom level with time-dependent quantum dynamics, a computationally efficient and physically robust simulation framework is required. The purpose of this project is to develop a modular and user-friendly software platform capable of simulating the nonlinear dipole response of a single atom under a focused laser beam using the Lewenstein model. The system is intended to serve both educational and research purposes, providing intuitive parameter control through a graphical user interface (GUI), while relying on a high-performance C++ backend to carry out the numerically intensive computations. Additionally, the platform should support convergence analysis of the time grid resolution and offer visual feedback in the form of dipole and spectral plots, enabling the user to assess the accuracy and physical validity of the simulation. Theoretical Background: High-Order Harmonic Generation from a Single Atom High-order harmonic generation (HHG) is a nonlinear light\u2013matter interaction process where an atom or molecule, subjected to an intense infrared (IR) laser field, emits radiation at multiples of the fundamental frequency. This section describes the essential physical mechanisms and theoretical models used in the simulation of HHG in noble gases. In theoretical treatments of HHG, several approximations are typically made: - The driving laser frequency is assumed to be far from any atomic resonance. - Relativistic and magnetic field effects are neglected. - The dipole approximation is used (wavelength \u226b atomic size). Classical Model of HHG The classical or three-step model explains HHG as: Ionization : Electron tunnels through the Coulomb barrier due to the strong field. Acceleration : Electron oscillates in the laser field and gains kinetic energy. Recombination : Electron recombines with the parent ion and emits a high-energy photon. Figure 1: Scheme illustrating the three steps of the HHG process. The electric field is modeled as: \\[ E(t) = E_1 \\cos(\\omega_1 t + \\varphi_0), \\] and the ponderomotive energy is: \\[ U_p = \\frac{e^2 E_1^2}{4 m_e \\omega_1^2}. \\] The cutoff energy is: \\[ E_{\\mathrm{max}} = I_p + 3.17 U_p. \\] Electron trajectories depend on ionization time. Each half-cycle leads to two trajectories (short and long), which differ in chirp. Figure 2: Electron trajectories and final kinetic energy from the classical model. Top: trajectories colored by final energy; bottom: ionization (red) and recombination (blue) times. Quantum Mechanical Description \u2013 Strong Field Approximation (SFA) SFA extends the model with quantum effects. The Keldysh parameter \\[ \\gamma = \\sqrt{\\frac{I_p}{2 U_p}} \\] characterizes the regime; \\( \\gamma < 1 \\) indicates tunneling dominance. SFA assumptions: - Single active electron (SAE) - Ground state depletion ignored - Continuum electron as Volkov wave The time-dependent dipole moment is given by the Lewenstein integral: \\[ x(t) = 2\\, \\mathrm{Re} \\left[ \\int_{-\\infty}^{t} \\mathrm{d}t' \\, \\left( \\frac{\\pi}{\\epsilon + i(t - t')/2} \\right)^{3/2} E(t') \\right] \\cdot \\] \\[ \\cdot d^* \\left[ p_s(t', t) + A(t') \\right] \\cdot d \\left[ p_s(t', t) + A(t') \\right] \\times \\exp \\left( -i S(p_s, t', t) \\right) \\] with quasi-classical action: \\[ S(p_s, t', t) = \\int_{t'}^{t} \\left( \\frac{[p_s + A(t'')]^2}{2} + I_p \\right) dt'' \\] and canonical momentum: \\[ p_s(t', t) = \\frac{1}{t - t'} \\int_{t'}^{t} A(t'') dt'' \\] For hydrogen-like atoms: \\[ d(p) = 2 \\left( \\frac{1}{\\pi 0.8 I_p} \\right)^{3/4} \\frac{p}{0.8 I_p} \\exp\\left(-\\frac{p^2}{2 \\cdot 0.8 I_p}\\right). \\] Spectral Synthesis and Attosecond Pulses The dipole spectrum is obtained as: \\[ \\tilde{x}(\\omega_q) = \\frac{1}{\\sqrt{2\\pi}} \\int_{-\\infty}^{\\infty} x(t) e^{-i \\omega_q t} dt. \\] Attosecond pulses: \\[ x_{\\text{atto}}(t) = \\mathcal{F}^{-1} \\left[ \\tilde{x}(\\omega_q) \\cdot W(\\omega_q) \\right], \\] with \\( W(\\omega_q) \\) a spectral window selecting plateau/cutoff harmonics. Figure 3: Left: Dipole moment and electric field. Middle: Emission spectrum from Lewenstein integral with plateau harmonics selected. Right: Reconstructed attosecond pulse train showing short and long trajectory contributions. Conclusion The classical three-step model offers intuitive insight into HHG, while the Lewenstein model (SFA) provides a more accurate quantum description. Together, they underpin modern HHG simulation techniques used to generate attosecond pulses and explore ultrafast dynamics.","title":"Home"},{"location":"#welcome-to-our-hhg-project-documentation","text":"This documentation contains components written in multiple languages: C++ Module Documentation Java GUI Documentation Python Backend Documentation","title":"Welcome to Our HHG Project Documentation"},{"location":"#about-the-project","text":"This software simulates high-harmonic generation using numerical methods. It consists of: - a C++ core simulation engine, - a Java-based GUI frontend, - and a Python integration/management layer.","title":"About the Project"},{"location":"#introduction","text":"High-Harmonic Generation (HHG) is a nonlinear optical process that occurs when intense, ultrashort laser pulses interact with atoms or molecules, resulting in the emission of coherent radiation at integer multiples of the driving laser frequency. The simulation of HHG phenomena requires highly accurate numerical models capable of resolving both temporal and spatial variations of the electromagnetic field, as well as the nonlinear atomic response. Due to the inherent complexity of the problem, particularly when modeling at the single-atom level with time-dependent quantum dynamics, a computationally efficient and physically robust simulation framework is required. The purpose of this project is to develop a modular and user-friendly software platform capable of simulating the nonlinear dipole response of a single atom under a focused laser beam using the Lewenstein model. The system is intended to serve both educational and research purposes, providing intuitive parameter control through a graphical user interface (GUI), while relying on a high-performance C++ backend to carry out the numerically intensive computations. Additionally, the platform should support convergence analysis of the time grid resolution and offer visual feedback in the form of dipole and spectral plots, enabling the user to assess the accuracy and physical validity of the simulation.","title":"Introduction"},{"location":"#theoretical-background-high-order-harmonic-generation-from-a-single-atom","text":"High-order harmonic generation (HHG) is a nonlinear light\u2013matter interaction process where an atom or molecule, subjected to an intense infrared (IR) laser field, emits radiation at multiples of the fundamental frequency. This section describes the essential physical mechanisms and theoretical models used in the simulation of HHG in noble gases. In theoretical treatments of HHG, several approximations are typically made: - The driving laser frequency is assumed to be far from any atomic resonance. - Relativistic and magnetic field effects are neglected. - The dipole approximation is used (wavelength \u226b atomic size).","title":"Theoretical Background: High-Order Harmonic Generation from a Single Atom"},{"location":"#classical-model-of-hhg","text":"The classical or three-step model explains HHG as: Ionization : Electron tunnels through the Coulomb barrier due to the strong field. Acceleration : Electron oscillates in the laser field and gains kinetic energy. Recombination : Electron recombines with the parent ion and emits a high-energy photon. Figure 1: Scheme illustrating the three steps of the HHG process. The electric field is modeled as: \\[ E(t) = E_1 \\cos(\\omega_1 t + \\varphi_0), \\] and the ponderomotive energy is: \\[ U_p = \\frac{e^2 E_1^2}{4 m_e \\omega_1^2}. \\] The cutoff energy is: \\[ E_{\\mathrm{max}} = I_p + 3.17 U_p. \\] Electron trajectories depend on ionization time. Each half-cycle leads to two trajectories (short and long), which differ in chirp. Figure 2: Electron trajectories and final kinetic energy from the classical model. Top: trajectories colored by final energy; bottom: ionization (red) and recombination (blue) times.","title":"Classical Model of HHG"},{"location":"#quantum-mechanical-description-strong-field-approximation-sfa","text":"SFA extends the model with quantum effects. The Keldysh parameter \\[ \\gamma = \\sqrt{\\frac{I_p}{2 U_p}} \\] characterizes the regime; \\( \\gamma < 1 \\) indicates tunneling dominance. SFA assumptions: - Single active electron (SAE) - Ground state depletion ignored - Continuum electron as Volkov wave The time-dependent dipole moment is given by the Lewenstein integral: \\[ x(t) = 2\\, \\mathrm{Re} \\left[ \\int_{-\\infty}^{t} \\mathrm{d}t' \\, \\left( \\frac{\\pi}{\\epsilon + i(t - t')/2} \\right)^{3/2} E(t') \\right] \\cdot \\] \\[ \\cdot d^* \\left[ p_s(t', t) + A(t') \\right] \\cdot d \\left[ p_s(t', t) + A(t') \\right] \\times \\exp \\left( -i S(p_s, t', t) \\right) \\] with quasi-classical action: \\[ S(p_s, t', t) = \\int_{t'}^{t} \\left( \\frac{[p_s + A(t'')]^2}{2} + I_p \\right) dt'' \\] and canonical momentum: \\[ p_s(t', t) = \\frac{1}{t - t'} \\int_{t'}^{t} A(t'') dt'' \\] For hydrogen-like atoms: \\[ d(p) = 2 \\left( \\frac{1}{\\pi 0.8 I_p} \\right)^{3/4} \\frac{p}{0.8 I_p} \\exp\\left(-\\frac{p^2}{2 \\cdot 0.8 I_p}\\right). \\]","title":"Quantum Mechanical Description \u2013 Strong Field Approximation (SFA)"},{"location":"#spectral-synthesis-and-attosecond-pulses","text":"The dipole spectrum is obtained as: \\[ \\tilde{x}(\\omega_q) = \\frac{1}{\\sqrt{2\\pi}} \\int_{-\\infty}^{\\infty} x(t) e^{-i \\omega_q t} dt. \\] Attosecond pulses: \\[ x_{\\text{atto}}(t) = \\mathcal{F}^{-1} \\left[ \\tilde{x}(\\omega_q) \\cdot W(\\omega_q) \\right], \\] with \\( W(\\omega_q) \\) a spectral window selecting plateau/cutoff harmonics. Figure 3: Left: Dipole moment and electric field. Middle: Emission spectrum from Lewenstein integral with plateau harmonics selected. Right: Reconstructed attosecond pulse train showing short and long trajectory contributions.","title":"Spectral Synthesis and Attosecond Pulses"},{"location":"#conclusion","text":"The classical three-step model offers intuitive insight into HHG, while the Lewenstein model (SFA) provides a more accurate quantum description. Together, they underpin modern HHG simulation techniques used to generate attosecond pulses and explore ultrafast dynamics.","title":"Conclusion"},{"location":"java/legal/jquery/","text":"jQuery v3.7.1 jQuery License jQuery v 3.7.1 Copyright OpenJS Foundation and other contributors, https://openjsf.org/ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Jquery"},{"location":"java/legal/jquery/#jquery-v371","text":"","title":"jQuery v3.7.1"},{"location":"java/legal/jquery/#jquery-license","text":"jQuery v 3.7.1 Copyright OpenJS Foundation and other contributors, https://openjsf.org/ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"jQuery License"},{"location":"java/legal/jqueryUI/","text":"jQuery UI v1.13.2 jQuery UI License Copyright jQuery Foundation and other contributors, https://jquery.org/ This software consists of voluntary contributions made by many individuals. For exact contribution history, see the revision history available at https://github.com/jquery/jquery-ui The following license applies to all parts of this software except as documented below: ==== Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ==== Copyright and related rights for sample code are waived via CC0. Sample code is defined as all source code contained within the demos directory. CC0: http://creativecommons.org/publicdomain/zero/1.0/ ==== All files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms above.","title":"jqueryUI"},{"location":"java/legal/jqueryUI/#jquery-ui-v1132","text":"","title":"jQuery UI v1.13.2"},{"location":"java/legal/jqueryUI/#jquery-ui-license","text":"Copyright jQuery Foundation and other contributors, https://jquery.org/ This software consists of voluntary contributions made by many individuals. For exact contribution history, see the revision history available at https://github.com/jquery/jquery-ui The following license applies to all parts of this software except as documented below: ==== Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ==== Copyright and related rights for sample code are waived via CC0. Sample code is defined as all source code contained within the demos directory. CC0: http://creativecommons.org/publicdomain/zero/1.0/ ==== All files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms above.","title":"jQuery UI License"}]}